- model_class = Item
div class="page-header"
  h1 All work items.
  p
    | PipeCleaner has 
    = Item.count
    |  work items.
  = link_to "Create a work item.", new_item_path, :class => 'btn btn-primary'

= will_paginate @items

table class="table table-striped table-condensed table-hover"
  thead
    tr
      th Name
      th Pipelines
      th Project Tags
      th Notes
      th Contributor
      th Created
      th API URL
      th=t '.actions', :default => t("helpers.actions")
  tbody
    - @items.each do |item|
      tr
        td= item.name
        td= item.pipelines.collect{|p| link_to(p.name, edit_pipeline_path(p))}.join(', ').html_safe
        td= item.project_list
        td= item.notes
        td= item.user.email
        td= item.created_at
        td
          = link_to 'JSON', item_url(item, format: 'json')
          |  
          = link_to 'XML', item_url(item, format: 'xml')
        td
          = link_to  t('.edit', :default => t("helpers.links.edit")), edit_item_path(item), :class => 'btn btn-mini'
          '
          = link_to t('.destroy', :default => t("helpers.links.destroy")), item_path(item), :method => :delete, :data => { :confirm => "This will removing all associations with existing pipelines, including status information, before removing the work item. This is irrevokable. Are you sure?"}, :class => 'btn btn-mini btn-danger'

= will_paginate @items

